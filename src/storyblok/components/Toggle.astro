---
import iconCheck from '../../images/svgs/icon-check.svg?raw';
import iconX from '../../images/svgs/icon-x.svg?raw';

interface Props {
  label: string;
  type: 'tools' | 'experiments' | 'stunts';
}

const { label, type } = Astro.props;
---

<label class="flex items-center space-x-3 cursor-pointer">
  <input
    type="checkbox"
    :checked={`filters.${type}`}
    @click={`updateFilters('${type}')`}
    class="sr-only peer"
  />
  <span class="text-mud">{label}</span>
  <span
    class="relative inline-block w-16 h-8 transition-colors duration-300 rounded-full peer-focus-visible:outline-none peer-focus-visible:ring-2 peer-focus-visible:ring-blue-500 peer-focus-visible:ring-offset-2"
    :class={`filters.${type} ? 'bg-green text-green-dark' : 'bg-red text-red-dark'`}
  >
    <i class="absolute left-0 z-10 w-6 h-6 mx-1 transition-all duration-300 ease-in-out transform -translate-y-1/2 bg-white rounded-full top-1/2" :class={`filters.${type} ? 'translate-x-8' : 'translate-x-0'`}></i>
    <span class="absolute z-0 transition-opacity duration-300 transform -translate-y-1/2 top-1/2 right-3" :class={`filters.${type} ? 'opacity-0' : 'opacity-100'`}><Fragment set:html={iconX} /></span>
    <span class="absolute z-0 transition-opacity duration-300 transform -translate-y-1/2 top-1/2 left-3" :class={`filters.${type} ? 'opacity-100' : 'opacity-0'`}><Fragment set:html={iconCheck} /></span>
  </span>
</label>
