---
import Image from './Image.astro';
const { projects } = Astro.props;
---

<div
  x-data="{
    showMore: false,
    filters: {
      tools: true,
      experiments: true,
      stunts: true
    },
    projects: JSON.parse(JSON.stringify(projects)),
    isVisible(index, type) {
      return (index < 12 || this.showMore) && this.filters[type];
    },
    updateFilters(filterType) {
      this.filters[filterType] = !this.filters[filterType];
      if (!this.filters[filterType]) {
        this.showMore = true;
      }
      if (!this.filters.tools && !this.filters.experiments && !this.filters.stunts) {
        this.filters = {
          tools: true,
          experiments: true,
          stunts: true
        };
      }
    }
  }"
  x-init="$watch('filters', value => {
    if (!value.tools || !value.experiments || !value.stunts) {
      this.showMore = true;
    }
    if (!value.tools && !value.experiments && !value.stunts) {
      filters = {
        tools: true,
        experiments: true,
        stunts: true
      };
    }
  })"
>
  <div>
    <div class="flex gap-2 mb-4">
      Show
      <button class="flex" @click="showMore = false">
        <span
          class="rounded-full bg-gray-500 h-6 w-6 inline-block"
          :class="{ 'bg-green-500': !showMore, 'bg-gray-200': showMore }"
        ></span>
        Top 12
      </button>
      <button class="flex" @click="showMore = true">
        <span
          class="rounded-full h-6 w-6 inline-block"
          :class="{ 'bg-green-500': showMore, 'bg-gray-200': !showMore }"
        ></span>
        All
      </button>
    </div>

    <div class="flex gap-4 mb-4">
      <label>
        <input type="checkbox" :checked="filters.tools" @click="updateFilters('tools')"> Tools
      </label>
      <label>
        <input type="checkbox" :checked="filters.experiments" @click="updateFilters('experiments')"> Experiments
      </label>
      <label>
        <input type="checkbox" :checked="filters.stunts" @click="updateFilters('stunts')"> Stunts
      </label>
    </div>
  </div>

  <ul class="grid grid-cols-8 gap-5">
    {projects.map((project, index) => {
      const { content } = project;
      const backgroundColor = content.backgroundColor?.color || '#000';
      const textColor = content.textColor?.color || '#fff';

      return (
        <li
          class="project-item"
          data-type={content.type}
          style={`
            --projectBackgroundColor: ${backgroundColor};
            --projectTextColor: ${textColor};
          `}
          x-show={`isVisible(${index}, '${content.type}')`}
        >
          <a href={`/${project.slug}`}>
            {content.icon && <Image image={content.icon} />}
            <h3>{project.name}</h3>
            {content.tagline && <p>{content.tagline}</p>}
          </a>
        </li>
      );
    })}
  </ul>

  <button @click="showMore = true" x-show="!showMore">Load More</button>
</div>

<style>
  .project-item {
    background-color: var(--projectBackgroundColor);
    color: var(--projectTextColor);
  }

  .project-item a {
    color: inherit;
    text-decoration: none;
  }

  .project-item h3,
  .project-item p {
    color: inherit;
  }
</style>
