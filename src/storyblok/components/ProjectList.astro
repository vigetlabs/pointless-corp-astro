---
import Icon from './Icon.astro';
import Image from './Image.astro';
import ToggleButton from './ToggleButton.astro';
import Toggle from './Toggle.astro';

const { projects } = Astro.props;
---

<div
  x-data="{
    showMore: $persist(false),
    filters: $persist({
      tools: true,
      experiments: true,
      stunts: true
    }),
    projects: JSON.parse(JSON.stringify(projects)),
    isVisible(index, type) {
      return (index < 12 || this.showMore) && this.filters[type];
    },
    updateFilters(filterType) {
      this.filters[filterType] = !this.filters[filterType];
      if (!this.filters[filterType]) {
        this.showMore = true;
      }
      if (!this.filters.tools && !this.filters.experiments && !this.filters.stunts) {
        this.filters = {
          tools: true,
          experiments: true,
          stunts: true
        };
      }
    }
  }"
  x-init="$watch('filters', value => {
    if (!value.tools || !value.experiments || !value.stunts) {
      this.showMore = true;
    }
    if (!value.tools && !value.experiments && !value.stunts) {
      filters = {
        tools: true,
        experiments: true,
        stunts: true
      };
    }
  })"
>
  <div class="flex justify-between font-functionpro text-sm uppercase">
    <div class="flex gap-4">
      <span class="">Filter:</span>
      <Toggle label="Tools" type="tools" />
      <Toggle label="Experiments" type="experiments" />
      <Toggle label="Stunts" type="stunts" />
    </div>

    <div class="flex gap-2">
      <span class="">Show:</span>

      <ToggleButton
        label="Top 12"
        isActive="!showMore"
        onClick="showMore = false"
      />
      <ToggleButton
        label="All"
        isActive="showMore"
        onClick="showMore = true"
      />
    </div>
  </div>

  <ul class="grid grid-cols-3 gap-5">
    {projects.map((project, index) => {
      const { content } = project;
      const backgroundColor = content.backgroundColor?.color || '#000';
      const textColor = content.textColor?.color || '#fff';

      return (
        <li
          class="project-item"
          data-type={content.type}
          style={`
            --projectBackgroundColor: ${backgroundColor};
            --projectTextColor: ${textColor};
          `}
          x-show={`isVisible(${index}, '${content.type}')`}
        >
          <a href={`/${project.slug}`}>
            {content.icon && <Image image={content.icon} />}

            <h3>{project.name}</h3>

            {content.tagline && <p>{content.tagline}</p>}

            <span class="block w-[120px] h-[120px]">
              <Icon icon={`stamp-${content.type}`} />
            </span>
          </a>
        </li>
      );
    })}
  </ul>

  <button @click="showMore = true" x-show="!showMore">Load More</button>
</div>

<style>
  .project-item {
    background-color: var(--projectBackgroundColor);
    color: var(--projectTextColor);
  }

  .project-item a {
    color: inherit;
    text-decoration: none;
  }

  .project-item h3,
  .project-item p {
    color: inherit;
  }
</style>
