---
import { renderRichText } from '@storyblok/astro';
import { Image } from 'astro:assets';
import StoryblokComponent from '@storyblok/astro/StoryblokComponent.astro'

const { blok, name, projects } = Astro.props;

function renderContent(content) {
  return content ? renderRichText(content) : '';
}
---

<article class="px-5 pt-20 project">
  <h1 class="sr-only">{name}</h1>

  <!-- Project Logo -->
  {blok.logo?.filename && (
    <Image
      src={blok.logo.filename}
      inferSize={true}
      alt=""
      class="mx-auto mb-5 block max-w-full"
    />
  )}

  <!-- Project Details -->
  <ul class="mx-auto table border-collapse text-center uppercase metatable font-functionpro">
    {blok.url && (
      <li class="table-cell border">
        <span class="block border-b px-3 metatable-label text-[10px] py-[2px]">Visit</span>
        <span class="block px-5 metatable-value py-[2px]">
          <a href={blok.url}>
            {(() => {
              const parts = blok.url.replace(/^(https?:\/\/)?(www\.)?/i, '').split('/');
              return parts[0] + (parts[1] ? '/' + parts[1] : '');
            })()}
          </a>
        </span>
      </li>
    )}
    {blok.xHandle && (
      <li class="table-cell border">
        <span class="block border-b px-3 metatable-label text-[10px] py-[2px]">Follow</span>
        <span class="block px-5 metatable-value py-[2px]">
          <a href={`https://x.com/${blok.xHandle}`} rel="noreferrer">@{blok.xHandle}</a>
        </span>
      </li>
    )}
    {blok.type && (
      <li class="table-cell border">
        <span class="block border-b px-3 metatable-label text-[10px] py-[2px]">Type</span>
        <span class="block px-5 metatable-value py-[2px]">
          {blok.type}
        </span>
      </li>
    )}
    {blok.launchDate && (
      <li class="table-cell border">
        <span class="block border-b px-3 metatable-label text-[10px] py-[2px]">Launched</span>
        <span class="block px-5 metatable-value py-[2px]">
          {new Date(blok.launchDate).toLocaleDateString('en-US', { month: '2-digit', year: 'numeric' }).replace('/', '/')}
        </span>
      </li>
    )}
    <li class="table-cell border">
      <span class="block border-b px-3 metatable-label text-[10px] py-[2px]">Status</span>
      <span class="block px-5 metatable-value py-[2px]">
        {blok.retiredDate ? 'archived' : 'active'}
      </span>
    </li>
  </ul>

  <!-- Project Description -->
  {blok.description && <section class="mx-auto max-w-3xl text-center project-description my-[60px] text-[24px] leading-[1.6em]" set:html={renderContent(blok.description)} />}

  <!-- Example Blocks -->
  {blok.examples && blok.examples.length > 0 && (
    <>
      <h2 class="sr-only">Examples</h2>

      {blok.examples.map((nestedBlok) => (
        <StoryblokComponent blok={nestedBlok} />
      ))}
    </>
  )}

  <!-- Project Process Images -->
  {blok.process && blok.process.length > 0 && (
    <section
    class="mx-auto my-10 max-w-7xl"
    x-data="{
      currentImage: 0,
      processNavButtons: $root.querySelectorAll('.process-nav-button'),
      processLength: $root.querySelectorAll('.process-image').length
    }">
      <h2 class="sr-only">Process</h2>

      <div class="relative" role="region" aria-label="Project Process Images">
        <ul class="overflow-hidden relative">
          {blok.process.map((image, index) => (
            <li
              x-show={`currentImage === ${index}`}
              class="process-image transition-opacity duration-300 ease-in-out"
              x-transition:enter="opacity-0 absolute top-0 left-0 w-full h-auto"
              x-transition:enter-start="opacity-0 absolute top-0 left-0 w-full h-auto"
              x-transition:enter-end="opacity-100"
              x-transition:leave="opacity-100"
              x-transition:leave-start="opacity-100"
              x-transition:leave-end="opacity-0 absolute top-0 left-0 w-full h-auto"
              role="tabpanel"
              aria-hidden={`currentImage !== ${index}`}
            >
              <Image
                src={image.filename}
                alt={image.alt || 'Process image'}
                class="w-full h-auto"
                inferSize={true}
              />
            </li>
          ))}
        </ul>

        <div class="slide-nav px-[2px] rounded-full absolute bottom-5 left-1/2 -translate-x-1/2 flex justify-center mt-4" role="tablist" aria-label="Image navigation">
          {blok.process.map((_, index) => (
            <button
              class="process-nav-button w-[26px] h-[26px] relative"
              @click={`currentImage = ${index}`}
              role="tab"
              aria-selected={`currentImage === ${index}`}
              aria-controls={`image-${index}`}
              :tabindex={`currentImage === ${index} ? 0 : -1`}
              @keydown={(event) => {
                if (event.key === 'ArrowRight') {
                  currentImage = (currentImage + 1) % processLength;
                } else if (event.key === 'ArrowLeft') {
                  currentImage = (currentImage - 1 + processLength) % processLength;
                }

                processNavButtons[currentImage].focus();
              }}
            >
              <span class="sr-only">Slide {index + 1}</span>
              <span
                class="block rounded-full border absolute top-1/2 left-1/2 -translate-x-1/2 -translate-y-1/2"
                :class={`currentImage === ${index} ? 'bg-transparent border-white w-3 h-3' : 'bg-white border-none w-2 h-2'`}
              ></span>
            </button>
          ))}
        </div>
      </div>
    </section>
  )}

  <!-- Related Content -->
  {blok.relatedContent && blok.relatedContent.length > 0 && (
    <section class="mx-auto mt-14 mb-10 max-w-7xl">
      <h2 class="mb-3 text-center text-4xl uppercase font-functionpro">More about {name}</h2>

      <ul class="text-center uppercase font-functionpro">
        {blok.relatedContent.map((related) => (
          <li class="py-4 text-lg leading-4">
            {(() => {
              const content = (
                <>
                  {related.title && <span class="group-hover:underline">{related.title}</span>}
                  {related.sourceName && <><br><span class="text-xs text-white">via {related.sourceName}</span></>}
                </>
              );
              return related.url ? <a href={related.url} class="group !no-underline">{content}</a> : content;
            })()}
          </li>
        ))}
      </ul>
    </section>
  )}

  <!-- More Projects -->
  <section class="mx-auto mt-14 mb-10 max-w-7xl">
    <h2 class="mb-3 text-center text-4xl uppercase font-functionpro">More Pointless Projects</h2>

    <ul class="text-center text-lg uppercase font-functionpro xs:columns-2 md:columns-3">
      {projects.map((project) => (
        <li class="py-2">
          <a href={`/${project.slug}`} class="!no-underline hover:!underline">{project.name}</a>
        </li>
      ))}
    </ul>
  </section>
</article>

<style>
  .project {
    background-color: var(--backgroundColor);
    color: var(--textColor);
  }

  .project a {
    color: var(--linkColor);
    text-decoration: underline;
  }

  .metatable li,
  .metatable-label {
    border-color: var(--accentColor);
  }

  .metatable-value {
    color: var(--linkColor);
  }

  .slide-nav {
    background-color: var(--backgroundColor);
  }
</style>
